import json
from hashlib import sha256

class block_header:
    def __init__(self, index=0, timestamp=0.0, prev_hash="0", difficulty=0, merkle_root=0, nonce=0):
        self.index = index
        self.timestamp = timestamp      ##float32
        self.prev_hash = prev_hash
        self.difficulty = difficulty
        self.nonce = nonce
        self.merkle_root = merkle_root

    def calculate_block_hash(self):
        # calculate block(block_header) hash
        block_header_string = json.dumps(self.__dict__, sort_keys=True)
        return sha256(sha256(block_header_string.encode()).hexdigest().encode()).hexdigest() #generated by twice SHA-256 calculation

class Block():
    def __init__(self, index=0, timestamp=0, prev_hash="0", difficulty=0, merkle_root=0, nonce=0, data=[]):  ## data : transcation being used
        # block structure
        self.header=block_header(index=index, timestamp=timestamp, prev_hash=prev_hash, difficulty=difficulty, merkle_root=merkle_root, nonce=nonce)
        # self.index = index
        # self.data = data
        # self.timestamp = timestamp
        # self.prev_hash = prev_hash
        # self.difficulty = difficulty
        # self.nonce = nonce
        # self.merkle_root = merkle_root

        self.hash = self.header.calculate_block_hash()
        self.data = data.copy()       ###Transaction[ ]
